name: dev

on:
  workflow_dispatch:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master, 'branch-*' ]
    paths-ignore:
      - "scripts/**"
      - "tools/**"
      - "jenkins/**"
      - "notes/**"

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/setup-action@v1.2.0-M2
        with:
          jvm: temurin:1.17
          apps: sbt sbtn
      - uses: coursier/cache-action@v6

      - name: Configure ntp time
        run: |
          sudo apt-get install ntp -y
          sudo ntptime -T 37

      - name: Tests
        run: |
          sbt clean
          sbt -DenableFatalWarnings=true -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true csw-time/Test/test
          sbt -DenableFatalWarnings=true -Dpekko.actor.serialize-messages=on -DenableCoverage=true -DgenerateStoryReport=true -DdisableTimeTests Test/test

      - name: Coverage Report
        run: |
          sbt -DenableCoverage=true coverageReport
          sbtn coverageAggregate

      - name: Generate RTM
        if: always()
        run: |
          cs launch --channel https://raw.githubusercontent.com/tmtsoftware/osw-apps/master/apps.json rtm:0.3.0 -- target/RTM/testStoryMapping.txt tools/RTM/cswStoryToRequirementMap.csv target/RTM/testRequirementsMapping.txt

      - name: Upload RTM
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: RTM
          path: target/RTM

      - uses: actions/upload-artifact@v2
        with:
          name: Coverage Report
          path: target/scala-2.13/scoverage-report

  multi-jvm-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: coursier/setup-action@v1.2.0-M2
        with:
          jvm: temurin:1.17
          apps: sbt sbtn
      - uses: coursier/cache-action@v6

      - name: Docs Check
        run: |
          sbtn clean
          sbtn scalafmtCheck
          : # sbtn scalastyle # Not scala 3 ready
          sbtn makeSite

      - name: Multi-Jvm Tests
        run: sbt -DenableFatalWarnings=true -DgenerateStoryReport=true integration/MultiJvm/test

      - name: Generate RTM
        if: always()
        run: |
          cs launch --channel https://raw.githubusercontent.com/tmtsoftware/osw-apps/master/apps.json rtm:0.3.0 -- target/RTM/testStoryMapping.txt tools/RTM/cswStoryToRequirementMap.csv target/RTM/testRequirementsMapping.txt

      - name: Upload RTM
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: RTM-multi-jvm
          path: target/RTM

  slack-success:
    needs: [ unit-tests, multi-jvm-tests ]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Success
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev

  slack-failure:
    needs: [ unit-tests, multi-jvm-tests ]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Failure
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev

  slack-cancelled:
    needs: [ unit-tests, multi-jvm-tests ]
    if: cancelled()
    runs-on: ubuntu-latest
    steps:
      - uses: kpritam/slack-job-status-action@v1
        with:
          job-status: Cancelled
          slack-bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel: ci-dev
